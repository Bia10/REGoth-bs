# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

# We can run multiple jobs in parallel. For this project
# I'm running Linux, Windows, and macOS jobs. For syntac details
# see https://docs.microsoft.com/en-us/azure/devops/pipelines/process/phases
jobs:
  - job: Linux

    # The VM image to use for the hosted agent. For a list of possible agents
    # see https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted
    # You can see the software installed on each agent at the same link.
    pool:
      vmImage: 'ubuntu-16.04'
  
    steps:
    - bash: |
          sudo apt-get update
          sudo apt-get install uuid-dev libgl1-mesa-dev libglu1-mesa-dev mesa-common-dev
          sudo apt-get install libx11-dev libxcursor-dev libxrandr-dev libxi-dev
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test
          sudo apt-get install gcc-8 g++-8
          sudo apt-get install libphysfs-dev libsquish-dev
          export CC=gcc-8
          export CXX=g++-8
          cd ci
          ./build-linux.sh

#  - job: macOS
#    pool:
#      vmImage: 'macOS-10.14'
#    steps:
#    - bash: |
#          brew install ossp-uuid
#          brew install gcc-8
#          export CC=gcc-8
#          export CXX=g++-8
#          mkdir build
#          cd build
#          cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo ..
#          cmake --build . --parallel

  - job: Windows
    pool:
      vmImage: 'vs2017-win2016'

    steps:
    - bash: |
          cd ci
          ./build-windows.sh